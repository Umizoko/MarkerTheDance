{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/Engine.js","webpack:///./src/js/index.js","webpack:///./src/js/module/FBXModel.js","webpack:///./src/js/module/GLTFModel.js","webpack:///./src/js/module/stats.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACO;AACE;;AAE3B;;AAEf;;AAEA;;AAEA;;;AAGA;;AAEA;AACA,0BAA0B,qDAAI;AAC9B;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,0BAA0B,wDAAQ;AAClC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA,aAAa;;AAEb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACnNA;AAAA;AAA6B;;AAE7B;;AAEA,sBAAsB,+CAAM;;AAE5B;;AAEA,CAAC;;;;;;;;;;;;;ACRD;AAAA;AAAe;;AAEf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;;;;;;;AC3DA;AAAA;AAAe;;AAEf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;;AAEA;AACA;;AAEA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,MAAM,OAAO,eAAe,YAAY;AAChE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,+BAA+B;AACvD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAKC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/index.js\");\n","import Stat from './module/stats'\r\nimport FBXModel from './module/FBXModel'\r\nimport GLTFModel from './module/GLTFModel'\r\n\r\nexport default class Engine {\r\n\r\n    constructor( canvasElement ) {\r\n\r\n        this.canvas = document.getElementById( canvasElement );\r\n\r\n    }\r\n\r\n\r\n    init() {\r\n\r\n        // performance\r\n        const stats = new Stat();\r\n        document.body.appendChild( stats.dom );\r\n\r\n\r\n        // create scene\r\n        const scene = new THREE.Scene();\r\n\r\n\r\n        // create renderer\r\n        const renderer = new THREE.WebGLRenderer( {\r\n            canvas: document.querySelector( \"#threeCanvas\" ),\r\n            antialias: true,\r\n            alpha: true,\r\n        } );\r\n\r\n        renderer.setClearColor( new THREE.Color( \"black\" ), 0 );\r\n        const myCanvas = document.querySelector( '#threeCanvas' );\r\n        let canvasWidth = myCanvas.clientWidth;\r\n        let canvasHeight = myCanvas.clientHeight;\r\n        renderer.setSize( canvasWidth, canvasHeight );\r\n        renderer.gammaOutput = true;\r\n        renderer.gammaInput = true;\r\n        renderer.shadowMap.enabled = true;\r\n\r\n        // create camera\r\n        const camera = new THREE.Camera();\r\n        scene.add( camera );\r\n\r\n\r\n        // arToolkitSource\r\n        const source = new THREEx.ArToolkitSource( {\r\n            sourceType: \"webcam\",\r\n        } );\r\n\r\n        source.init( function onReady () {\r\n            onResize();\r\n        } );\r\n\r\n\r\n        // create arToolkitContext\r\n        const context = new THREEx.ArToolkitContext( {\r\n            debug: false,\r\n            cameraParametersUrl: \"ar/camera_para.dat\",\r\n            detectionMode: \"mono\",\r\n            imageSmoothingEnabled: true,\r\n            maxDetectionRate: 30,\r\n            canvasWidth: source.parameters.sourceWidth,\r\n            canvasHeight: source.parameters.sourceHeight,\r\n        } );\r\n\r\n        context.init( function onCompleted () {\r\n\r\n            // コンテクスト初期化が完了\r\n            camera.projectionMatrix.copy( context.getProjectionMatrix() );\r\n\r\n        } );\r\n\r\n\r\n        // MarkerのGroup作成\r\n        const marker = new THREE.Group();\r\n        scene.add( marker );\r\n\r\n        // set arMarkerControls\r\n        const option = {\r\n            size: 1,\r\n            type: 'pattern',\r\n            patternUrl: 'ar/hiro.patt'\r\n        }\r\n        const controls = new THREEx.ArMarkerControls(\r\n            context,\r\n            marker,\r\n            option\r\n        );\r\n\r\n        // CubeMap(環境マップ)\r\n        const cubeTextureLoader = new THREE.CubeTextureLoader();\r\n        const env = './assets/env/Lycksele2/';\r\n        const textureCube = cubeTextureLoader.load( [\r\n            env + 'posx.jpg',\r\n            env + 'negx.jpg',\r\n            env + 'posy.jpg',\r\n            env + 'negy.jpg',\r\n            env + 'posz.jpg',\r\n            env + 'negz.jpg'\r\n        ] );\r\n\r\n\r\n        const robot = new FBXModel(\r\n            './assets/robot/WaveHipHopDance.fbx',\r\n            scene,\r\n            marker,\r\n            textureCube\r\n        );\r\n\r\n        robot.init();\r\n\r\n        // Web Audio API\r\n        // FIXME: 汎用クラスでの書き換え\r\n        let audioContext;\r\n        window.AudioContext = window.AudioContext || window.webkitAudioContext;\r\n        audioContext = new AudioContext();\r\n\r\n        let dogBarkingBuffer = null;\r\n\r\n        function loadDogSound ( url ) {\r\n\r\n            let request = new XMLHttpRequest();\r\n            request.open( 'GET', url, true );\r\n            request.responseType = 'arraybuffer';\r\n\r\n\r\n            request.onload = () => {\r\n                audioContext.decodeAudioData( request.response, ( buffer ) => {\r\n                    dogBarkingBuffer = buffer;\r\n                    playSound( dogBarkingBuffer );\r\n                } );\r\n            }\r\n\r\n            request.send();\r\n        }\r\n\r\n        function playSound ( buffer ) {\r\n            const source = audioContext.createBufferSource();\r\n            source.buffer = buffer;\r\n            source.connect( audioContext.destination );\r\n            source.start( 0 );\r\n            source.loop = true;\r\n        }\r\n\r\n        loadDogSound( './assets/sound/Go_to_the_camp.mp3' );\r\n\r\n        // Directional Light\r\n        const directionalLight = new THREE.DirectionalLight( 0xFFFFFF, 1 );\r\n        directionalLight.castShadow = true;\r\n        directionalLight.position.y = 4;\r\n        directionalLight.shadow.mapSize.width = 2048;\r\n        directionalLight.shadow.mapSize.height = 2048;\r\n        scene.add( directionalLight );\r\n\r\n\r\n        // floor\r\n        const floor = new THREE.Mesh(\r\n            new THREE.BoxGeometry( 2, 0.1, 2 ),\r\n            new THREE.MeshStandardMaterial( {\r\n                color: 0xFFFFFF,\r\n                roughness: 0,\r\n                metalness: 1,\r\n                envMap: textureCube\r\n            } )\r\n        );\r\n        floor.position.y = -0.1\r\n        floor.receiveShadow = true;\r\n        marker.add( floor );\r\n\r\n        tick();\r\n\r\n        function tick () {\r\n\r\n\r\n            requestAnimationFrame( tick );\r\n\r\n            if ( source.ready === false ) return;\r\n\r\n            // obs performance\r\n            stats.update();\r\n\r\n            // ar\r\n            context.update( source.domElement );\r\n\r\n            // robot update\r\n            robot.update();\r\n\r\n            renderer.render( scene, camera );\r\n\r\n\r\n            // resiza\r\n            window.addEventListener( \"resize\", function () {\r\n\r\n                onResize();\r\n\r\n            } );\r\n\r\n        }\r\n\r\n        function onResize () {\r\n\r\n            source.onResizeElement();\r\n            source.copyElementSizeTo( renderer.domElement );\r\n            if ( context.arController !== null ) {\r\n                source.copyElementSizeTo( context.arController.canvas );\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","import Engine from './Engine'\r\n\r\nwindow.addEventListener( 'load', () => {\r\n\r\n    const scene = new Engine( 'threeCanvas' );\r\n\r\n    scene.init();\r\n\r\n} );\r\n","export default class FBXModel {\r\n\r\n    constructor( filename, scene, group, textureCube ) {\r\n\r\n        this._filename = filename;\r\n        this._scene = scene;\r\n        this._group = group;\r\n        this._mixier;\r\n        this._clock = new THREE.Clock();\r\n\r\n        this._textureCube = textureCube;\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        const loader = new THREE.FBXLoader();\r\n        loader.load(\r\n\r\n            this._filename,\r\n\r\n            ( object ) => {\r\n\r\n                object.mixier = new THREE.AnimationMixer( object );\r\n                this._mixier = object.mixier;\r\n\r\n                const action = object.mixier.clipAction( object.animations[ 0 ] );\r\n                action.play();\r\n\r\n                // scaling\r\n                object.scale.set( 0.01, 0.01, 0.01 );\r\n\r\n                this._group.add( object );\r\n\r\n                // Mesh抽出\r\n                object.children.map( ( value, index ) => {\r\n\r\n                    // RobotのMesh\r\n                    if ( value.type === 'SkinnedMesh' ) {\r\n\r\n                        value.material.envMap = this._textureCube;\r\n                        value.material.shininess = 90;\r\n                        value.material.reflectivity = 0.9;\r\n\r\n                        // shadow\r\n                        value.castShadow = true;\r\n                    }\r\n                } );\r\n\r\n            }\r\n        );\r\n    }\r\n\r\n    update() {\r\n\r\n        if ( this._mixier ) this._mixier.update( this._clock.getDelta() );\r\n\r\n    }\r\n\r\n}\r\n","export default class GLTFModel {\r\n\r\n    constructor( filename, scene, group ) {\r\n\r\n        this._filename = filename;\r\n        this._scene = scene;\r\n        this._group = group;\r\n        this._mixier;\r\n        this._clock = new THREE.Clock();\r\n\r\n    }\r\n\r\n    init() {\r\n\r\n        // gltf loader\r\n        const loader = new THREE.GLTFLoader();\r\n        loader.load(\r\n            this._filename,\r\n            ( gltf ) => {\r\n\r\n                // animaiton再生\r\n                const animations = gltf.animations;\r\n                const object = gltf.scene;\r\n                if ( animations && animations.length ) {\r\n                    let i;\r\n                    this._mixier = new THREE.AnimationMixer( object );\r\n                    for ( i = 0; i < animations.length; i++ ) this._mixier.clipAction( animations[ i ] ).play();\r\n                }\r\n\r\n                // modelをgroupに追加\r\n                this._group.add( object );\r\n\r\n            },\r\n            ( xhr ) => ( console.log( ( xhr.loaded / xhr.total * 100 ) + '% loaded' ) ),\r\n            ( error ) => ( console.log( 'An error happened ', error ) )\r\n        );\r\n\r\n    }\r\n\r\n    update() {\r\n\r\n        if ( this._mixier ) this._mixier.update( this._clock.getDelta() );\r\n\r\n    }\r\n\r\n\r\n}\r\n","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Stats = function () {\n    var mode = 0\n\n    var container = document.createElement( 'div' )\n    container.style.cssText =\n        'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000'\n    container.addEventListener(\n        'click',\n        function ( event ) {\n            event.preventDefault()\n            showPanel( ++mode % container.children.length )\n        },\n        false\n    )\n\n    //\n\n    function addPanel ( panel ) {\n        container.appendChild( panel.dom )\n        return panel\n    }\n\n    function showPanel ( id ) {\n        for ( var i = 0; i < container.children.length; i++ ) {\n            container.children[ i ].style.display = i === id ? 'block' : 'none'\n        }\n\n        mode = id\n    }\n\n    //\n\n    var beginTime = ( performance || Date ).now(),\n        prevTime = beginTime,\n        frames = 0\n\n    var fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) )\n    var msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) )\n\n    if ( self.performance && self.performance.memory ) {\n        var memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) )\n    }\n\n    showPanel( 0 )\n\n    return {\n        REVISION: 16,\n\n        dom: container,\n\n        addPanel: addPanel,\n        showPanel: showPanel,\n\n        begin: function () {\n            beginTime = ( performance || Date ).now()\n        },\n\n        end: function () {\n            frames++\n\n            var time = ( performance || Date ).now()\n\n            msPanel.update( time - beginTime, 200 )\n\n            if ( time >= prevTime + 1000 ) {\n                fpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 )\n\n                prevTime = time\n                frames = 0\n\n                if ( memPanel ) {\n                    var memory = performance.memory\n                    memPanel.update(\n                        memory.usedJSHeapSize / 1048576,\n                        memory.jsHeapSizeLimit / 1048576\n                    )\n                }\n            }\n\n            return time\n        },\n\n        update: function () {\n            beginTime = this.end()\n        },\n\n        // Backwards Compatibility\n\n        domElement: container,\n        setMode: showPanel,\n    }\n}\n\nStats.Panel = function ( name, fg, bg ) {\n    var min = Infinity,\n        max = 0,\n        round = Math.round\n    var PR = round( window.devicePixelRatio || 1 )\n\n    var WIDTH = 80 * PR,\n        HEIGHT = 48 * PR,\n        TEXT_X = 3 * PR,\n        TEXT_Y = 2 * PR,\n        GRAPH_X = 3 * PR,\n        GRAPH_Y = 15 * PR,\n        GRAPH_WIDTH = 74 * PR,\n        GRAPH_HEIGHT = 30 * PR\n\n    var canvas = document.createElement( 'canvas' )\n    canvas.width = WIDTH\n    canvas.height = HEIGHT\n    canvas.style.cssText = 'width:80px;height:48px'\n\n    var context = canvas.getContext( '2d' )\n    context.font = 'bold ' + 9 * PR + 'px Helvetica,Arial,sans-serif'\n    context.textBaseline = 'top'\n\n    context.fillStyle = bg\n    context.fillRect( 0, 0, WIDTH, HEIGHT )\n\n    context.fillStyle = fg\n    context.fillText( name, TEXT_X, TEXT_Y )\n    context.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT )\n\n    context.fillStyle = bg\n    context.globalAlpha = 0.9\n    context.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT )\n\n    return {\n        dom: canvas,\n\n        update: function ( value, maxValue ) {\n            min = Math.min( min, value )\n            max = Math.max( max, value )\n\n            context.fillStyle = bg\n            context.globalAlpha = 1\n            context.fillRect( 0, 0, WIDTH, GRAPH_Y )\n            context.fillStyle = fg\n            context.fillText(\n                round( value ) +\n                ' ' +\n                name +\n                ' (' +\n                round( min ) +\n                '-' +\n                round( max ) +\n                ')',\n                TEXT_X,\n                TEXT_Y\n            )\n\n            context.drawImage(\n                canvas,\n                GRAPH_X + PR,\n                GRAPH_Y,\n                GRAPH_WIDTH - PR,\n                GRAPH_HEIGHT,\n                GRAPH_X,\n                GRAPH_Y,\n                GRAPH_WIDTH - PR,\n                GRAPH_HEIGHT\n            )\n\n            context.fillRect(\n                GRAPH_X + GRAPH_WIDTH - PR,\n                GRAPH_Y,\n                PR,\n                GRAPH_HEIGHT\n            )\n\n            context.fillStyle = bg\n            context.globalAlpha = 0.9\n            context.fillRect(\n                GRAPH_X + GRAPH_WIDTH - PR,\n                GRAPH_Y,\n                PR,\n                round( ( 1 - value / maxValue ) * GRAPH_HEIGHT )\n            )\n        },\n    }\n}\n\nexport {\n    Stats as\n    default\n}\n"],"sourceRoot":""}